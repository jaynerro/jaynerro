<?php //On démarre la session ?>
<?php //session_start(); ?>


<!DOCTYPE html>
<html lang="fr">

  <head>
    <?php // Type d'encodage ?>
    <meta charset="utf-8">

    <?php // Balise viewport permettant à une page web d'être responsive ?>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <?php // Bootstrap CSS ?>
    <link rel="stylesheet" href="../../../static/vendor/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="../../../static/vendor/fontawesome/all.min.css" />
    <link rel="stylesheet" href="../../../static/css/tree.css">
    
    <?php // Feuille de style ?>
    <link rel="stylesheet" href="../../../static/css/style.css">
    <link rel="stylesheet" type="text/css" href="../../../static/css/prism.css"/>

    <?php // Titre de l'onget de la page ?>
    <title>Active Directory - Exploitez les chemins d’attaque</title>
    <link rel="icon" type="image/png" href="../../../images/jaynerro-icon.png">

  </head>

  <?php // Corps de la page ?>
  <body class="dark">

    <?php //Inclusion de la barre de navigation ?>
    <?php require_once('../../../header.php'); ?>
    
    <div class="container" style="margin-top: 30px;">
    <?php // Mise en place d'un fil d'Arianne ?>
        <div class="row justify-content-center">
            <div class="col">
                <div class="breadcrumb">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="../../../knowledge-base">Knowledge Base</a></li>
                            <li class="breadcrumb-item"><p style="font-size: medium;">Ethical Hacking</p></li>
                            <li class="breadcrumb-item"><p style="font-size: medium;">Active Directory</p></li>
                            <li class="breadcrumb-item active" aria-current="page">Exploitez les chemins d’attaque</li>
                        </ol>
                    </nav>
                </div> 
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-sm-8">
                <h1> 
                    Exploitez les chemins d’attaque
                </h1>
                <img src="../../../images/ad.png" class="img-fluid mx-auto d-block" style="max-width: 50%; margin-top: 50px;"/>
                <ul id="nav-tree">
                    <li id="liSummary" style="margin-top: 20px;">
                        <a><b>Sommaire</b></a>
                        <ul>
                            <a href="#I" style="margin-top: 5px; margin-left: 20px;">I - Compromettez un premier compte</a>
                                <a href="#I1" style="margin-top: 10px; margin-left: 40px;">1 - Prenez la main sur une machine</a>
                                <a href="#I2" style="margin-top: 10px; margin-left: 40px;">2 - Profitez d’une politique de mot de passe faible</a>
                                <a href="#I3" style="margin-top: 10px; margin-left: 40px;">3 - Utilisez le réseau à votre avantage</a>
                            <a href="#II" style="margin-top: 15px; margin-left: 20px;">II - Propagez-vous latéralement avec le protocole NTLM</a>
                                <a href="#II1" style="margin-top: 10px; margin-left: 40px;">1 - Authentification NTLM</a>
                                <a href="#II2" style="margin-top: 10px; margin-left: 40px;">2 - Pass-the-hash</a>
                                <a href="#II3" style="margin-top: 10px; margin-left: 40px;">3 - Relais NTLM</a>
                            <a href="#III" style="margin-top: 15px; margin-left: 20px;">III - Effectuez un mouvement latéral avec le protocole Kerberos</a>
                                <a href="#III1" style="margin-top: 10px; margin-left: 40px;">1 - Exploitez le protocole Kerberos</a>
                                <a href="#III2" style="margin-top: 10px; margin-left: 40px;">2 - Exploitez les autres protocoles</a>
                                <a href="#III3" style="margin-top: 10px; margin-left: 40px;">3 - Exploitez les partages réseau</a>
                            <a href="#IV" style="margin-top: 15px; margin-left: 20px;">IV - Compromettez le domaine en élevant vos privilèges</a>
                                <a href="#IV1" style="margin-top: 10px; margin-left: 40px;">1 - Profitez de la délégation Kerberos</a>
                                <a href="#IV2" style="margin-top: 10px; margin-left: 40px;">2 - Récupérez des identifiants sur un poste compromis</a>
                                <a href="#IV3" style="margin-top: 10px; margin-left: 40px;">3 - Exploitez les GPO pour compromettre de nouveaux comptes</a>
                                <a href="#IV4" style="margin-top: 10px; margin-left: 40px;">4 - Exploitez une PKI (Public Key Infrastructure)</a>
                            <a href="#V" style="margin-top: 15px; margin-left: 20px;">V - Maintenez un accès dans l’environnement compromis</a>
                                <a href="#V1" style="margin-top: 15px; margin-left: 20px;">1 - Créez un compte à privilèges</a>
                                <a href="#V2" style="margin-top: 15px; margin-left: 20px;">2 - Adoptez les techniques de persistance classiques</a>
                                <a href="#V3" style="margin-top: 15px; margin-left: 20px;">3 - Modifiez les droits des objets sensibles</a>
                                <a href="#V4" style="margin-top: 15px; margin-left: 20px;">4 - Forgez des tickets Kerberos</a>
                        </ul>
                    </li>
                </ul>
                <div id="I">
                    <p style="margin-top: 40px; margin-left: 10px; justify-content: start">
                        <b>I - Compromettez un premier compte</b>
                    </p>
                </div>
                <div id="I1">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        1 - Prenez la main sur une machine
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Lors de votre découverte du réseau, vous avez sans doute identifié des machines présentes sur le réseau, les services proposés par ces machines, ainsi que les versions des systèmes d’exploitation et des services.
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    <b>Exploiter un défaut de mise à jour</b>
                </p>
                <p style="margin-top: 30px;">
                    Parmi ces services, voici quelques vulnérabilités qui me permettent de prendre la main sur la machine lorsqu’elle est exploitée :</br></br>
                    MS17-010 est une vulnérabilité sur le service SMB des machines Windows. Elle a été corrigée en 2017, mais vous trouverez régulièrement des  machines qui ne sont plus mises à jour dans un système d’information. Pour identifier des machines vulnérables, l’outil nmap vous sera utile.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad19'?></code></pre>
                <p style="margin-top: 30px; justify-content: start">
                    Pour l’exploiter, le framework Metasploit sera d’une grande aide.
                </p>
                <img src="../../../images/eh-ad-8.png" class="img-fluid mx-auto d-block" style="max-width: 90%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Utilisation de Metasploit pour exploiter MS17-010
                </p>
                <p style="margin-top: 30px;">
                    Il existe d’autres vulnérabilités Windows permettant de prendre le contrôle à distance de la machine, comme la CVE-2019-0708, appelée BlueKeep et affectant le protocole RDP, ou encore la CVE-2020-1350, appelée SIGRed affectant le service DNS. Ces vulnérabilités, bien que critiques, sont cependant plus difficiles à exploiter que MS17-010.</br></br>
                    Cette liste n’est bien sûr pas exhaustive, et il est très important de vous tenir informé via votre veille. Personnellement, je suis tous les matins sur Twitter pour voir s’il y a des nouveautés dans le monde de la sécurité informatique.
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    <b>Utiliser des identifiants par défaut</b>
                </p>
                <p style="margin-top: 30px;">
                    Lorsque vous découvrez des serveurs et services, prenez soin de repérer les mires d’authentification web. Vous savez, ces pages internet sur lesquelles il faut renseigner un nom d’utilisateur et un mot de passe pour accéder au site. Vous aurez très souvent ce type de page lorsque vous voudrez accéder à la partie administration d’une application.</br></br>
                    Or pour de nombreuses solutions, il existe des identifiants par défaut utilisables lorsque l’application est installée pour la première fois. Il faudrait bien sûr qu’ils soient changés, mais ce n’est pas toujours fait par les administrateurs. C’est pourquoi, dès que je tombe sur une interface d’authentification, je regarde le nom et la version de l’application web, et je cherche la documentation de cette application pour y découvrir les identifiants par défaut.</br></br>
                    Vous pourrez alors vous connecter à des interfaces d’administration de plusieurs types d’applications :
                </p>
                <ul style="margin-top: 20px; font-size: large; text-align: justify; color: white;">
                    <li>des serveurs d’application, ce qui vous permettra d’ajouter une application arbitraire sur le serveur, et ainsi exécuter du code à distance. Il y a par exemple les serveurs Tomcat, Jenkins ou JBoss ;</li>
                    <li>des serveurs d’impression qui sont parfois connectés à l’Active Directory pour connaître les utilisateurs de l’entreprise et leurs adresses mail. Vous pourrez alors trouver les identifiants de l’imprimante ;</li>
                    <li>des équipements réseau, comme des switchs ou des routeurs. Vous serez alors en mesure de lire leur configuration, et découvrir des VLAN cachés ;</li>
                    <li>des outils d’administration comme des interfaces iLo, ou des serveurs vCenter.</li>
                </ul>
                <p style="margin-top: 30px;">
                    Il y a beaucoup d’autres possibilités, mais quoiqu’il arrive, n’hésitez pas à chercher et tester des identifiants simples, classiques. Pour vous épauler, vous pouvez utiliser le dépôt GitHub DefaultCreds-cheat-sheet, qui recense des identifiants par défaut pour beaucoup d’applications.
                </p>
                <div id="I2">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        2 - Profitez d’une politique de mot de passe faible
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Vous avez découvert la politique de mot de passe de l’entreprise lors de votre phase de reconnaissance. La connaître vous permettra de tenter de trouver des premiers identifiants valides mais faibles.</br></br>
                    Pour cela, vous pouvez faire du password spraying. Cela signifie que vous allez tenter d’utiliser un mot de passe simple sur tout ou partie des utilisateurs du domaine.</br></br>
                    Un mot de passe simple, c’est un mot de passe qui est très facile à retenir pour l’utilisateur, avec un nom commun ou un nom propre, et peut-être un chiffre et un symbole. Ça peut également être une suite de chiffres.</br></br>
                    Voici donc quelques idées que l'on peut appliquer lors d'audits.
                </p>
                <ul style="margin-top: 20px; font-size: large; text-align: justify; color: white;">
                    <li>Le nom de l’entreprise, auquel on ajoute l’année actuelle à la fin et une majuscule au début. Par exemple Medicex2022. Nous pouvons tester également avec un point d’exclamation à la fin, Medicex2022!.</li>
                    <li>Nous pouvons faire pareil avec le nom de la ville dans laquelle se trouve l’entreprise, pour donner Paris2022 ou Paris2022!.</li>
                    <li>Parfois nous pouvons tester des choses très simples qui sont des combinaisons des mots de passe les plus utilisés en France. Tester les mots de passe qui ne sont que des chiffres fonctionnent que très rarement.</li>
                </ul>
                <p style="margin-top: 30px;">
                    Vous pouvez donner libre cours à votre imagination bien sûr, et adapter vos tests à votre contexte. Si vous savez que le mot de passe de tous les nouveaux arrivants est Welcome123 et qu’ils doivent le changer à leur arrivée, ça vaut le coup de l’essayer !</br></br>
                    Il existe d’ailleurs beaucoup d’outils pour vérifier la validité d’un mot de passe sur plusieurs comptes. L’outil SprayHound en est un.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad20'?></code></pre>
                <p style="margin-top: 30px;">
                    Le mot de passe Medicex1 sera testé sur la liste des utilisateurs fournie dans le fichier utilisateurs.txt.</br></br>
                    Si vous avez déjà compromis un compte du domaine, vous pouvez laisser SprayHound chercher tous les utilisateurs. Vous n’avez qu’à lui fournir le nom d’utilisateur ( -lu  )  et le mot de passe ( -lp  )  que vous connaissez. Par ailleurs, ayant un compte valide, l’outil a l’avantage de tester intelligemment, en prenant en compte la politique de mot de passe. Il ne testera pas les comptes qui seront bloqués au prochain échec.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad21'?></code></pre>
                <img src="../../../images/eh-ad-9.png" class="img-fluid mx-auto d-block" style="max-width: 90%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Exemple d’utilisation de SprayHound
                </p>
                <p style="margin-top: 30px;">
                    Enfin, une technique qui peut parfois fonctionner, c'est le user-as-pass. Vous allez chercher les utilisateurs pour lesquels le mot de passe est exactement leur nom d’utilisateur. Cela arrive régulièrement, et vous pourrez trouver des comptes comme test ayant pour mot de passe test, ou encore servicesql ayant également comme mot de passe servicesql.</br></br>
                    SprayHound est capable de faire ces tests. Pour cela, vous pouvez utiliser les mêmes lignes de commande que précédemment, sauf que vous ne précisez pas de mot de passe à tester. Vous pourrez alors fournir une liste de noms d’utilisateurs (-U), ou fournir un premier compte (-lu et -lp).
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad22'?></code></pre>
                <p style="margin-top: 30px;">
                    Faites toujours attention lorsque vous faites du password spraying. La phase de reconnaissance est cruciale pour limiter les risques, mais vous n’êtes jamais à l’abri d’une configuration particulière chez un client. Si vous avez un doute, parlez-en avec la personne responsable du système d’information dans lequel vous êtes, pour vous assurer qu’elle est en mesure de débloquer rapidement un compte en cas de problème.
                </p>
                <div id="I3">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        3 - Utilisez le réseau à votre avantage
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Si vous n’avez toujours pas récupéré de compte, ou si vous souhaitez en trouver de nouveaux pour avoir de nouveaux privilèges, vous pouvez exploiter des comportements par défaut de Windows au niveau du réseau.
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    <b>LLMNR et NBT-NS</b>
                </p>
                <p style="margin-top: 30px;">
                    Le premier point concerne les protocoles LLMNR (Link-local Multicast Name Resolution) et NBT-NS (NetBIOS Name Service). Ce sont tous les deux des protocoles de résolution de nom. Quand une machine Windows cherche à trouver l’adresse IP associée à un nom de domaine ou de machine, elle va tenter plusieurs choses. Elle vérifiera s’il n’y a pas une entrée dans le fichier hosts, puis elle utilisera le protocole DNS, mais si ça ne fonctionne toujours pas, elle utilisera les protocoles NetBIOS et LLMNR. En utilisant ces protocoles, Windows enverra la demande de résolution de nom à toutes les machines qui l’entourent, ce qu’on appelle du broadcast.
                </p>
                <img src="../../../images/eh-ad-10.png" class="img-fluid mx-auto d-block" style="max-width: 90%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Fonctionnement des protocoles NBT-NS et LLMNR
                </p>
                <img src="../../../images/eh-ad-11.png" class="img-fluid mx-auto d-block" style="max-width: 90%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Phase 2 (suite) du fonctionnement des protocoles NBT-NS et LLMNR dans une attaque Man-In-The-Middle
                </p>
                <p style="margin-top: 30px;">
                    Se mettre en position de man-in-the-middle (homme du milieu) n’est jamais anodin. Il existe un risque que vous interfériez avec le travail d’un collaborateur, en bloquant temporairement un accès à un serveur légitime, par exemple. Faites donc toujours attention lorsque vous faites des attaques au niveau du réseau.</br></br>
                    L’outil Responder vous permet de faire ça automatiquement, en précisant l’interface réseau qu’il doit utiliser pour se mettre en écoute des sollicitations LLMNR et NBT-NS.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad23'?></code></pre>
                <p style="margin-top: 30px;">
                    Vous récolterez parfois des identifiants en clair, mais plus souvent des hashs NTLMv1 ou NTLMv2, en fonction de la version de NTLM configurée pour les machines attaquées. Ces condensats doivent ensuite être cassés, avec l’outil hashcat, par exemple.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad24'?></code></pre>
                <p style="margin-top: 30px;">
                    Le protocole NTLMv1 est obsolète. Si vous capturez un échange NTLMv1, vous pourrez trouver le hash NT utilisé lors de l’authentification en quelques heures, quelle que soit la complexité du mot de passe d’origine. Vous allez voir dans le prochain chapitre que connaître le hash NT d’un compte est suffisant pour le compromettre. 
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    <b>IPv6</b>
                </p>
                <p style="margin-top: 30px;">
                    Windows a un comportement par défaut assez étonnant en entreprise. Alors que l’immense majorité des entreprises sont entièrement configurées pour utiliser IPv4, le système d’exploitation Windows fonctionne par défaut en IPv4 et IPv6. Mais ça ne s’arrête pas là. IPv6 est prioritaire par rapport à IPv4. Ainsi, dans une entreprise, toutes les machines reçoivent des configurations IPv4, mais vous pouvez venir en tant qu’attaquant proposer des configurations IPv6 à tous les postes, et ce sera votre configuration qui prendra le dessus.</br></br>
                    Dans une configuration IPv6, on peut notamment indiquer où se trouve le serveur DNS, ou la route par défaut. C’est donc une manière très puissante de vous placer à nouveau en position d’homme du milieu.</br></br>
                    L’outil mitm6 exploite ce comportement.</br></br>
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad25'?></code></pre>
                <p style="margin-top: 30px;">
                    Il se mettra en écoute sur l’interface réseau fournie, et répondra aux requêtes DHCPv6. L’outil Responder peut être lancé en parallèle pour récolter des condensats de mots de passe.
                </p>
                <div id="II">
                    <p style="margin-top: 70px; margin-left: 10px; justify-content: start">
                        <b>II - Propagez-vous latéralement avec le protocole NTLM</b>
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Vous avez vos premiers identifiants sur le réseau, ou un premier accès sur un poste ou serveur du domaine. Il vous faut alors continuer votre plan d’attaque, et compromettre d’autres utilisateurs ou machines pour tenter de récupérer de nouveaux accès.
                </p>
                <p style="margin-top: 30px;">
                    Le protocole NTLM est l’un des deux protocoles d’authentification utilisés dans les environnements Microsoft. Il permet à un utilisateur de prouver qui il est auprès d’un serveur.</br></br>
                    Le terme “serveur” est employé dans le sens client-serveur. Le “serveur” peut très bien être un autre poste de travail.</br></br>
                    Voyons plusieurs manières de se propager latéralement avec le protocole NTLM.
                </p>
                <div id="II1">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        1 - Authentification NTLM
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    L’authentification consiste en une phase de challenge-response (ou défi-réponse) entre le client et le serveur.</br></br>
                    C’est une technique utilisée pour que le serveur vérifie que l’utilisateur connaît le mot de passe du compte avec lequel il s’authentifie, sans pour autant faire transiter le mot de passe sur le réseau.</br></br>
                    Cette authentification se déroule en trois étapes. D’abord le client indique qu’il veut s’authentifier. Le serveur lui envoie alors un défi, ou un challenge. Ce n’est rien d’autre qu’une valeur aléatoire qui change à chaque demande d’authentification. Le serveur enregistre d’ailleurs cette valeur dans un coin. Le client reçoit ce challenge et le chiffre en utilisant le hash de son mot de passe comme clé. Il renvoie cette version chiffrée au serveur, ainsi que son nom d’utilisateur.
                </p>
                <img src="../../../images/eh-ad-12.png" class="img-fluid mx-auto d-block" style="max-width: 90%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Protocole NTLM en trois étapes
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    Suite à ces échanges, le serveur est en possession de deux choses :
                </p>
                <ul style="margin-top: 20px; font-size: large; text-align: justify; color: white;">
                    <li>Le challenge qu’il a envoyé au client ;</li>
                    <li>La réponse du client qui a été chiffrée avec le hash de son mot de passe.</li>
                </ul>
                <p style="margin-top: 30px;">
                    Pour finaliser l’authentification, il ne reste plus au serveur qu’à vérifier la validité de la réponse envoyée par le client. Pour ce faire, le serveur a une base de données des utilisateurs locaux appelée SAM (Security Accounts Manager). Il y a la liste des noms d’utilisateurs, et le hash de leur mot de passe, appelé hash NT. Cela permet d’éviter de stocker les mots de passe en clair sur la machine. Quand le serveur reçoit la réponse du client qui tente de s’authentifier, il reçoit le challenge chiffré avec ce hash. Le serveur va procéder à la même opération en cherchant le hash de l’utilisateur dans sa table, et il va chiffrer le challenge qu’il a envoyé avec ce hash.</br></br>
                    S’il obtient la même chose que ce qu’a envoyé le client, c’est que le client a utilisé le même mot de passe, il est donc authentifié.
                </p>
                <img src="../../../images/eh-ad-13.png" class="img-fluid mx-auto d-block" style="max-width: 90%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Validation de la réponse NTLM
                </p>
                <ol style="margin-top: 20px; font-size: large; text-align: justify; color: white;">
                    <li>Réception du challenge.</li>
                    <li>Envoi de la réponse.</li>
                    <li>Recherche du hash NT dans la base de données SAM.</li>
                    <li>Calcul de la réponse attendue avec le hash NT de la SAM et le challenge.</li>
                    <li>Comparaison avec la réponse du client.</li>
                </ol>
                <p style="margin-top: 30px;">
                    Pour information, c’est aussi possible avec un compte de domaine. Le serveur ne connaît pas le secret du compte de domaine qui veut s’authentifier, il va donc déléguer la phase de vérification à un contrôleur de domaine.
                </p>
                <div id="II2">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        2 - Pass-the-hash
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Dans tous les cas l’utilisateur n’a utilisé que le hash NT de son mot de passe pour s’authentifier, jamais son mot de passe en clair. C’est le hash du mot de passe qui est stocké sur le serveur, pour éviter de stocker le mot de passe en clair, et c'est ce même hash suffit pour s’authentifier.</br></br>
                    Avec le protocole NTLM, si vous volez le mot de passe en clair, ou si vous volez le hash NT du mot de passe, vous aurez toutes les billes en main pour vous authentifier. Finalement, on peut même dire qu’avoir le hash NT revient à avoir le mot de passe en clair, dans la majorité des cas.</br></br>
                    Si lors de la phase de compromission du premier compte, vous avez exploité une vulnérabilité sur un poste de travail vous permettant de prendre la main dessus, il est possible que vous ayez les privilèges suffisants pour trouver le hash du mot de passe de l’administrateur local de ce poste.</br></br>
                    Or, dans une entreprise, les postes des collaborateurs sont souvent des copies d’un même poste qui a été configuré une bonne fois pour toutes, c’est beaucoup plus simple. Mais ça veut dire que les utilisateurs locaux sont les mêmes partout, notamment le compte administrateur local.</br></br>
                    C'est-à-dire, si vous avez compromis un seul de ces postes, et que vous avez trouvé le hash du compte administrateur, il y a de grandes chances pour que ce même hash soit valide sur tous les autres postes ! C’est ce qu’on appelle le pass-the-hash.
                </p>
                <img src="../../../images/eh-ad-14.png" class="img-fluid mx-auto d-block" style="max-width: 70%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Pass-the-hash
                </p>
                <p style="margin-top: 30px;">
                    Concrètement, si vous avez volé le hash de l’administrateur local d’un poste, vous pouvez tenter le pass-the-hash vers d’autres postes en utilisant l’outil CrackMapExec. C’est un excellent outil pour attaquer plusieurs machines en même temps, notamment en utilisant seulement le hash d’un utilisateur compromis.</br></br>
                    Pour extraire les hash NT des utilisateurs locaux sur des machines, le paramètre  --sam  doit être fourni à CrackMapExec, ainsi que les identifiants d’un compte administrateur.</br></br>
                    Si un signe [+] vert apparait dans la sortie de CrackMapExec pour une machine, c’est que le compte a le droit de s’authentifier sur cette machine. Si vous avez également le message (Pwn3d!), alors vous êtes administrateur de la machine.</br></br>
                    Pour s’authentifier avec le hash NT d’un utilisateur, vous pouvez utiliser le paramètre  -H  de CrackMapExec. Il faut également ajouter le paramètre  --local-auth  si vous vous authentifiez avec un compte local, et non un compte du domaine.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad27'?></code></pre>
                <p style="margin-top: 30px;">
                    Vous pouvez également utiliser le paramètre  -hashes  pour tous les outils propres à la suite Impacket. Par exemple l’outil psexec.py.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad28'?></code></pre>
                <p style="margin-top: 30px;">
                    Attention, le compte administrateur local peut être Administrateur ou Administrator, en fonction de la langue utilisée sur la machine Windows. Pensez bien à essayer les deux !
                </p>
                <div id="II3">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        3 - Relais NTLM
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Le protocole NTLM permet à un client de s’authentifier auprès d’un serveur. Vous avez vu que cette authentification se passe en trois étapes. Mais que se passe-t-il si un attaquant a réussi à se placer en position d’homme du milieu ? Il peut alors faire passe-plat, se faire passer pour le client auprès du serveur, et donc effectuer des actions sur le serveur en se faisant passer pour un client. C’est ce qu’on appelle le relais NTLM.
                </p>
                <img src="../../../images/eh-ad-15.png" class="img-fluid mx-auto d-block" style="max-width: 90%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Relais NTLM
                </p>
                <p style="margin-top: 30px;">
                    On se place dans le cadre où votre attaque Pass-the-hash réussit, vous êtes maintenant authentifié sur le serveur. Il faut maintenant passer à la deuxième phase : La phase de sessions.
                </p>
                <img src="../../../images/eh-ad-30.png" class="img-fluid mx-auto d-block" style="max-width: 50%; margin-top: 30px;"/>
                <p style="margin-top: 30px;">
                    Vous allez pouvoir, entre autres, lire les informations de l'AD via LDAP, ou des partages réseaux via SMB, et si vous avez des droits d'admin, vous pourrez compromettre le serveur cible en y exécutant des commandes. 
                </p>
                <img src="../../../images/eh-ad-31.png" class="img-fluid mx-auto d-block" style="max-width: 50%; margin-top: 30px;"/>
                <p style="margin-top: 30px;">
                    Mais dans certains cas, il existe une protection qui pourra faire échouer ces attaques, il s'agit de la signature des flux. Cela consiste à ce que même après votre authentification, toutes vos demandes devront être signées avec le mot de passe du client utilisateur.
                </p>
                <img src="../../../images/eh-ad-32.png" class="img-fluid mx-auto d-block" style="max-width: 50%; margin-top: 30px;"/>
                <p style="margin-top: 30px; justify-content: start">
                    Et comme vous ne connaissez pas ce mot de passe, l'attaque sera immédiatement bloquée. Par défaut, aucun serveur ne requiert de signature, sauf les controleurs de domaine pour SMB.
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    Un outil très puissant permet de faire du relais NTLM : ntlmrelayx.py, un des outils de la suite Impacket.
                </p>
                <img src="../../../images/eh-ad-16.png" class="img-fluid mx-auto d-block" style="max-width: 95%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Relais d’une connexion de MEDIC.EX\Administrateur vers 10.10.10.2
                </p>
                <p style="margin-top: 30px;">
                    Dans cet exemple, l’outil a été lancé pour relayer les authentifications vers le serveur 10.10.10.2 avec l’option -t. Une authentification de l’utilisateur MEDIC.EX\Administrateur est reçue par l’outil puis relayée vers le serveur. Une fois l’authentification terminée grâce au relais, ntlmrelayx extrait automatiquement les identifiants des utilisateurs locaux du poste.
                </p>
                <div id="III">
                    <p style="margin-top: 70px; margin-left: 10px; justify-content: start">
                        <b>III - Effectuez un mouvement latéral avec le protocole Kerberos</b>
                    </p>
                </div>
                <div id="III1">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        1 - Exploitez le protocole Kerberos
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Le protocole Kerberos est le deuxième protocole d’authentification clé dans un Active Directory. C’est d’ailleurs le protocole utilisé par défaut quand c’est possible. Il existe plusieurs manières d’exploiter ce protocole pour du mouvement latéral. Pour bien les comprendre, nous allons faire un bref rappel du fonctionnement de ce protocole.
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    <b>Kerberos</b>
                </p>
                <p style="margin-top: 30px;">
                    Lorsqu’un utilisateur veut utiliser un service, il doit pouvoir prouver auprès du service qui il est. Pour cela, au préalable, l’utilisateur va demander auprès du contrôleur de domaine un TGT, ou Ticket-Granting-Ticket. C’est l’équivalent d’un passeport. Ce document contient des informations sur l’utilisateur, notamment son nom et les groupes auxquels il appartient. D’ailleurs, comme un passeport, il doit être infalsifiable. L’utilisateur ne doit pas pouvoir changer son nom à son bon vouloir. Donc ce TGT est protégé par une clé que seul le contrôleur de domaine connaît.</br></br>
                    Pour pouvoir récupérer ce ticket, l’utilisateur doit se préauthentifier auprès du contrôleur de domaine en prouvant qu’il connaît son mot de passe. Si cette préauthentification est validée par le contrôleur de domaine, alors celui-ci lui renvoie son TGT.
                </p>
                <img src="../../../images/eh-ad-17.png" class="img-fluid mx-auto d-block" style="max-width: 80%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Protocole Kerberos - Demande de TGT
                </p>
                <p style="margin-top: 30px;">
                    Une fois son TGT en main, l’utilisateur peut faire des demandes d’accès à n’importe quel service. Pour accéder à un service spécifique, il fera encore une fois une demande au contrôleur de domaine. Il présentera son TGT, et demandera un ticket pour un service. Le contrôleur de domaine vérifie alors que le TGT est valide, qu’il n’a pas été modifié, et renvoie à l’utilisateur un autre ticket, qui est un ticket de service, spécifique au service demandé. Cette fois-ci, ce ticket est protégé par le mot de passe du compte de service associé, donc le compte qui exécute le service demandé. Ce ticket contient une copie du TGT de l’utilisateur.
                </p>
                <img src="../../../images/eh-ad-18.png" class="img-fluid mx-auto d-block" style="max-width: 80%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Protocole Kerberos - Demande de ticket de service
                </p>
                <p style="margin-top: 30px;">
                    Une fois que l'utilisateur a reçu le ticket de service, comment peut-il l'utiliser ? Il présente ce ticket au service lui-même. Comme il est protégé avec le mot de passe du compte de service, lorsqu’il le reçoit, il peut l’ouvrir et voir qui fait une demande, pour vérifier si l’utilisateur a les droits ou non d’utiliser le service.
                </p>
                <img src="../../../images/eh-ad-19.png" class="img-fluid mx-auto d-block" style="max-width: 85%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Protocole Kerberos - Utilisation du ticket de service
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    <b>Kerberoasting</b>
                </p>
                <p style="margin-top: 30px;">
                    Une fois le TGT en main, un utilisateur peut faire une demande de ticket de service pour n’importe quel service du domaine. Or, un ticket de service est protégé par le mot de passe du compte de service demandé. Donc en théorie, si vous demandez un ticket de service, vous pouvez essayer vous-même de trouver la clé qui déchiffre le ticket. Il suffit d’en essayer beaucoup, et peut-être que vous tomberez sur la bonne.</br></br>
                    Il se trouve que la majorité des services proposés dans un Active Directory sont portés par des ordinateurs, par des comptes machine. Or, le mot de passe d’un compte machine est très long et aléatoire. Vous n’aurez aucune chance de tomber sur le bon mot de passe par hasard.</br></br>
                    En revanche, il y a aussi des comptes utilisateurs qui exécutent parfois des services. Et c’est là que repose l’attaque Kerberoasting. L’idée est de demander des tickets de service pour tous les services qui sont portés par des utilisateurs. Pour chaque ticket, vous tenterez de trouver le mot de passe qui le protège. Si vous y parvenez, vous aurez trouvé le mot de passe du compte en question !</br></br>
                    Un outil de la suite Impacket permet d’automatiser ce processus. Il s’appelle GetUserSPNs.py.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad29'?></code></pre>
                <img src="../../../images/eh-ad-20.png" class="img-fluid mx-auto d-block" style="max-width: 90%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Utilisation de GetUserSPNs pour trouver les comptes Kerberoastables
                </p>
                <p style="margin-top: 30px;">
                    Une fois les tickets récupérés, l’outil les mettra sous une forme compréhensible pour des outils comme hashcat, pour tenter de retrouver le mot de passe associé.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad30'?></code></pre>
                <p style="margin-top: 30px;">
                    Il existe des outils qui indiqueront que le compte krbtgt est Kerberoastable. En effet, ce compte est assimilé à un compte utilisateur, et possède un SPN (kadmin/changepw). Cependant, d’une part ce compte est désactivé, et d’autre part il existe sur toutes les versions d’Active Directory et possède un mot de passe long et complexe. Il n’est pas utile de perdre du temps à essayer de casser son mot de passe.
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    <b>Pass-the-ticket</b>
                </p>
                <p style="margin-top: 30px;">
                    Si vous compromettez une machine, ou un compte administrateur sur un poste, vous pouvez tenter de retrouver des tickets Kerberos en mémoire pour les réutiliser. En effet, si vous trouvez le ticket TGT d’un autre compte, vous pourrez potentiellement le réutiliser pour vous faire passer pour ce compte, sous réserve qu’il ne soit pas expiré. C’est ce qu’on appelle la technique du pass-the-ticket.
                </p>
                <div id="III2">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        2 - Exploitez les autres protocoles
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Dans un environnement Active Directory, de nombreux autres protocoles cohabitent. Certains d’entre eux permettent de prendre la main à distance sur une machine, comme SMB, RDP, SSH, WinRM, VNC, WMI et bien d’autres.</br></br>
                    Si vous avez des identifiants, vous pouvez les utiliser pour vous propager latéralement. Voici quelques exemples d’outils qui peuvent être utilisés pour ce déplacement latéral.</br></br>
                    Avec SMB, vous avez la possibilité de créer à distance un service et de l’exécuter. Un service, ce n’est rien d’autre qu’une application qui fonctionne en arrière-plan. C’est ce que fait l’outil psexec lorsque vous l’utilisez pour exécuter des commandes à distance. Cet outil a été porté dans la suite Impacket que vous connaissez maintenant. Il s’appelle psexec.py.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad31'?></code></pre>
                <p style="margin-top: 30px;">
                    RDP permet d’avoir un bureau déporté sur une machine cible. C’est comme si vous étiez devant l’écran, mais à distance. C’est très pratique pour les tâches d’administration ! C’est également utile pour vous si vous voulez accéder à de nouveaux postes avec des identifiants compromis. Vous pouvez utiliser le client RDP de Windows, mais également des clients sous Linux avec FreeRDP. Il en existe d’autres, mais celui-ci a une fonctionnalité intéressante : il prend en charge le fait de n’utiliser que le hash NT pour s’authentifier. Cela fonctionne quand une connexion RDP se fait en mode Restricted Admin, une sécurité proposée par Windows qui a pour effet de bord d’autoriser le pass-the-hash en utilisant le protocole RDP.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad32'?></code></pre>
                <div id="III3">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        3 - Exploitez les partages réseau
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Pour terminer, les partages réseau sont très souvent oubliés ou négligés lors d’audits. C’est pourtant une mine d’informations pour vous, notamment lors de la phase de reconnaissance. Dans les partages réseau, vous trouverez très régulièrement des documents personnels, sensibles, relatifs à des projets internes, des configurations d’applications, voire leur code source, des sauvegardes, etc.</br></br>
                    Lors de la phase de reconnaissance, vous avez appris à identifier où se trouvent les partages réseau, tout en identifiant ceux qui vous sont accessibles. Cela vous permet d’aller chercher par vous-même à la main les documents qui peuvent être intéressants pour votre phase d’attaque.</br></br>
                    Il existe un outil complémentaire à la phase de recherche manuelle, qui vous permettra potentiellement de découvrir des informations sensibles dans les partages réseau de l’entreprise. Cet outil s’appelle Snaffler, et automatise une partie des recherches. Pour cela, il va se connecter à un contrôleur de domaine pour extraire la liste de tous les ordinateurs présents sur le domaine. Pour chacun d’eux, il va le contacter, lister les partages réseau s’il y en a, puis les parcourir de manière récursive pour accéder à tous les fichiers dans tous les dossiers. Pour éviter que cela ne prenne trop de temps, une série de filtres sont utilisés pour ne scanner que les fichiers qui seront à priori intéressants.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad33'?></code></pre>
                <p style="margin-top: 30px;">
                    L’outil permet de gagner du temps en faisant une première passe sur tous les partages, mais rien n’est magique ! Ce n’est pas parce qu’il ne trouve rien qu’il n’y a rien.</br></br>
                    Dans un premier temps l'utilisation de Snaffler, lors d'audits permet de faire une première passe, mais il est important également de faire beaucoup de recherches à la main. Il y a beaucoup de données, notamment métier, qu’il est très difficile pour un outil automatique d’identifier comme critiques ou sensibles.
                </p>
                <div id="IV">
                    <p style="margin-top: 70px; margin-left: 10px; justify-content: start">
                        <b>IV - Compromettez le domaine en élevant vos privilèges</b>
                    </p>
                </div>
                <div id="IV1">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        1 - Profitez de la délégation Kerberos
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Dans un Active Directory, des utilisateurs peuvent utiliser des services. Il arrive parfois qu’un service dépende d’un autre service pour fonctionner. Par exemple, si dans l’intranet de l’entreprise, il y a un moyen d’accéder à ses fichiers stockés dans un partage réseau, cela veut peut-être dire que le service web de l’intranet accède à un partage réseau pour pouvoir l’afficher à l’utilisateur.
                </p>
                <img src="../../../images/eh-ad-21.png" class="img-fluid mx-auto d-block" style="max-width: 80%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Accès d’un service à une autre ressource
                </p>
                <p style="margin-top: 30px;">
                    Or, le service web ne sait pas quels sont les droits de l’utilisateur sur le partage réseau. C’est là qu’entre en jeu la délégation Kerberos.</br></br>
                    Le principe est de permettre à un compte de service de se faire passer pour un utilisateur auprès d’un autre service.
                </p>
                <img src="../../../images/eh-ad-22.png" class="img-fluid mx-auto d-block" style="max-width: 80%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Accès d’un service à une autre ressource
                </p>
                <p style="margin-top: 30px;">
                    Ce mécanisme permet à l’intranet de se faire passer pour l’utilisateur, et de s’authentifier au nom de celui-ci auprès du serveur de fichiers. Ainsi, du point de vue du serveur de fichiers, c’est l’utilisateur qui fait la demande, et le serveur de fichiers va pouvoir vérifier les droits de cet utilisateur, puis envoyer les informations auxquelles ce compte a accès. C’est de cette manière que le serveur web peut ensuite afficher ces informations dans une jolie interface.
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    Exemple : &nbsp;<a href="https://tf.orange.com" target="_blank"> site du Transfert de fichier Orange</a>
                </p>
                <p style="margin-top: 30px;">
                    Pour ne pas nous mélanger les pinceaux, nous dirons qu’un utilisateur se connecte à un service, qui lui-même accède à une ressource. Cette ressource est également un service, c’est seulement un autre nom qu’on lui donne pour bien comprendre qui accède à quoi.
                </p>
                <img src="../../../images/eh-ad-23.png" class="img-fluid mx-auto d-block" style="max-width: 80%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Nomenclature des différents éléments
                </p>
                <p style="margin-top: 30px;">
                    Il existe trois types de délégations qui peuvent toutes être exploitées par un attaquant :
                </p>
                <ul style="margin-top: 20px; font-size: large; text-align: justify; color: white;">
                    <li>la délégation non contrainte ;</li>
                    <li>la délégation contrainte ;</li>
                    <li>la délégation contrainte basée sur les ressources.</li>
                </ul>
                <p style="margin-top: 30px;">
                    C’est cependant la délégation non contrainte la plus dangereuse pour une entreprise, et c’est donc sur celle-ci que nous allons le plus nous attarder.</br></br>
                    Dans la délégation non contrainte, c’est le service qui en est responsable, et comme son nom l’indique, le compte de service n’a aucune contrainte. Dès qu’un utilisateur lui présente un ticket de service, il peut se faire passer pour cet utilisateur auprès de n’importe quelle autre ressource.
                </p>
                <img src="../../../images/eh-ad-23.png" class="img-fluid mx-auto d-block" style="max-width: 80%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Délégation sans contrainte
                </p>
                <p style="margin-top: 30px;">
                    Pour que cela fonctionne, quand un utilisateur accède à un service en délégation sans contrainte, il envoie non seulement son ticket de service, mais également une copie de son TGT. Vous le savez, le TGT, c’est la carte d’identité de l’utilisateur. Le service est donc en possession du TGT de l’utilisateur, et peut ainsi demander des tickets de service pour n’importe quelle ressource en se faisant passer pour l’utilisateur.</br></br>
                    C’est très intéressant pour vous : cela signifie que si vous compromettez un service en délégation non contrainte, vous pouvez vous faire passer pour quelqu’un sans aucun problème ! Il suffit d’attendre qu’un utilisateur veuille utiliser le service compromis, et dès que ça arrive, vous pouvez extraire son TGT, qu’il va vous fournir.</br></br>
                    Pour cette attaque, l’outil Rubeus peut être utilisé sur une machine Windows. Sachez que beaucoup de services sont exécutés par le compte machine. Donc si vous compromettez une machine qui est en délégation non contrainte, vous pouvez attendre les TGT des utilisateurs pour les extraire.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad34'?></code></pre>
                <p style="margin-top: 30px;">
                    Lorsque vous récoltez des TGT, vous pouvez les utiliser dans votre session en utilisant l’option ptt (pour pass-the-ticket) de Rubeus.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad35'?></code></pre>
                <p style="margin-top: 30px;">
                    Concernant la délégation contrainte, c’est également le service qui en est responsable. Lorsqu’un service est configuré en délégation contrainte, il pourra aussi se faire passer pour un utilisateur auprès de ressources, mais pour une liste de ressources bien définies.</br></br>
                    Si vous compromettez un serveur en délégation contrainte, vous pourrez donc vous faire passer pour des utilisateurs auprès des ressources autorisées pour la délégation. Le périmètre d’attaque est moins large, mais il existe.</br></br>
                    Enfin, en délégation contrainte basée sur les ressources (ou RBCD pour Resource Based Constrained Delegation), la responsabilité de la délégation est déplacée. Alors que dans la délégation non contrainte et dans la délégation contrainte, c’est au niveau du service qui délègue que l’on configure la délégation, dans le cas de la RBCD, c’est au niveau des ressources qu’on indique la liste des services qui peuvent communiquer avec elles via délégation.
                </p>
                <img src="../../../images/eh-ad-24.png" class="img-fluid mx-auto d-block" style="max-width: 80%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Délégation contrainte basée sur les ressources
                </p>
                <p style="margin-top: 30px;">
                    Pour cela, une liste de services autorisés à faire de la délégation est renseignée au niveau de la ressource. Donc si en tant qu’attaquant, vous avez le droit de modifier cette liste, vous pourrez y ajouter des services arbitraires.</br></br>
                    Par exemple, si vous avez compromis un compte de service via Kerberoasting, ou si vous êtes administrateur d’un poste, vous pouvez les ajouter à la liste de confiance de la ressource, et ainsi vous faire passer pour des utilisateurs auprès de cette ressource.</br></br>
                    Pour identifier les machines qui sont configurées pour de la délégation Kerberos, l’outil findDelegation.py de la suite Impacket peut être utilisé.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad36'?></code></pre>
                <div id="IV2">
                    <p style="margin-top: 40px; margin-left: 20px; justify-content: start">
                        2 - Récupérez des identifiants sur un poste compromis
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Nous avons vu que grâce au pass-the-hash, nous avons compromis notre premier domaine. Nous avons volé le hash du compte administrateur local d’une machine et nous l’avons rejoué sur tous les autres postes, ça nous a permis de voler le mot de passe d’un administrateur de domaine.</br></br>
                    Pour faire cela, nous avons extrait les identifiants de tous les processus lsass des machines compromises.</br></br>
                    Cette technique permet une élévation de privilège et est très commune.</br></br>
                    Le matin quand vous vous connectez à votre ordinateur, vous renseignez votre nom d’utilisateur et votre mot de passe. Une fois authentifié, vous pouvez accéder à des ressources comme des partages réseaux sans avoir à les fournir à nouveaux (les credentials). Tout cela est possible, car Windows enregistre vos identifiants dans un processus appelé Local Security Authority Subsystem Service (LSASS).</br></br>
                    En résumé, c’est lui qui gère toute la sécurité de Windows. Comment cela fonctionne concrètement ?</br></br>
                    Quand le processus LSASS est en cours d’exécution, son contenu exécutable est copié dans la mémoire vive. Certains utilisateurs peuvent en faire une photographie à un instant T, le résultat est fourni sous forme de fichier qu’on appelle « fichier de vidage » ou « dump mémoire ».</br></br>
                    Les informations récupérées permettent de faciliter un débogage. Pour faire un dump du processus LSASS vous avez 2 options. Chacune nécessite d’être Administrateur du poste compromis.
                </p>
                <ul style="margin-top: 20px; font-size: large; text-align: justify; color: white;">
                    <li>Première option : vous avez besoin du privilège « SeDebugPrivilege » que vous ne pouvez activer qu’en tant qu’Administrateur.</li>
                    <li>Seconde option : être le compte qui exécute le processus. LSASS est exécuté par le compte SYSTEM, qui est le compte d’administration intégré à Windows. Il faut donc impérativement être Administrateur pour ouvrir une session en tant que SYSTEM.</li>
                </ul>
                <p style="margin-top: 30px;">
                    Une fois le dump de LSASS effectué vous avez en main un fichier précieux. Il contient les identifiants enregistrés d’utilisateurs de la machine. Le Graal pour vous en tant qu’attaquant est de récupérer ceux d’utilisateurs ayant des privilèges d’Administrateur du domaine.</br></br>
                    Avec la technique du pass-the-hash que nous avons vu, plusieurs dizaines de machines ont été compromises, aller se connecter sur chacune d’entre elles pour lancer l’outil d’analyse peut être fastidieux. Nous pouvons alors utiliser un outil qui permet d’extraire les identifiants de LSASS à distance sur plusieurs machines en parallèle. L’outil s’appelle lsassy.
                </p>
                <img src="../../../images/eh-ad-26.png" class="img-fluid mx-auto d-block" style="max-width: 50%; margin-top: 30px;"/>
                <p style="margin-top: 30px;">
                    Vous avez découvert qu’il était possible d’extraire des identifiants du processus Lsass pour peut-être trouver des comptes de domaine à privilèges, notamment avec l’outil lsassy qui permet d’automatiser cette tâche sur plusieurs postes à distance.</br></br>
                    Les recherches ne doivent pas s’arrêter là. Il existe beaucoup d’autres endroits dans lesquels sont stockés des identifiants pour simplifier la vie des utilisateurs.</br></br>
                    Une des fonctionnalités de Windows, appelée DPAPI (Data Protection API), permet d’enregistrer de manière chiffrée des informations sensibles sur un ordinateur. Cette fonctionnalité est utilisée par plusieurs composants de Windows et logiciels. C’est le cas des tâches planifiées, des mots de passe des réseaux Wi-Fi ou encore des mots de passe de Chrome. Évidemment, si Windows est capable de les utiliser pour automatiquement se connecter à un réseau Wi-Fi, par exemple, ça veut dire que toutes les clés sont à portée pour que vous puissiez les extraire.</br></br>
                    L’outil DonPAPI a été créé pour ça. Son but est d’extraire les secrets DPAPI (mais pas que) sur un ensemble de machines à distance. Il faut que vous soyez administrateur local des postes ciblés.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad37'?></code></pre>
                <p style="margin-top: 30px;">
                    Il y a un autre endroit dans lequel sont enregistrés des mots de passe : la base de registres. Cette base contient les données de configuration du système d'exploitation et des autres logiciels installés désirant s'en servir. Vous pourrez y trouver les identifiants des comptes locaux dans la ruche SAM. C’est ici qu’on peut extraire le hash NT de l’administrateur local de la machine. Il y a également les secrets LSA dans la ruche SECURITY. Ces secrets sont les mots de passe des comptes utilisés pour exécuter des services, par exemple.</br></br>
                    Ces secrets peuvent être extraits à l’aide de l’outil secretsdump.py, toujours de la suite Impacket.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad38'?></code></pre>
                <p style="margin-top: 30px;">
                    Si vous avez compromis un contrôleur de domaine, cet outil ira en plus extraire tous les secrets de tous les utilisateurs et postes du domaine. En effet, il utilisera le protocole DRS (Directory Replication Service) pour se faire passer pour un contrôleur de domaine, et demander à la cible une réplication complète. Cela s’appelle la technique du DCSync.</br></br>
                    Enfin, comme la base de registre est utilisée par de nombreux logiciels pour y stocker des configurations, il est fort possible qu’ils enregistrent des mots de passe enregistrés par des utilisateurs.
                </p>
                <div id="IV3">
                    <p style="margin-top: 40px; margin-left: 20px; justify-content: start">
                        3 - Exploitez les GPO pour compromettre de nouveaux comptes
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Parmi les différents rôles d’un Active Directory se trouve le rôle de gestion du parc. Active Directory permet de gérer l’ensemble des machines et utilisateurs du système d’information, et pour cela les stratégies de groupe (Group Policy Objects – GPO) sont un outil indispensable.</br></br>
                    Concrètement, les GPO sont un ensemble de règles/actions qui s’appliquent à un ensemble bien défini d’ordinateurs et d’utilisateurs. Une GPO permet de faire beaucoup, beaucoup de choses, comme modifier l’écran de veille, paramétrer des réseaux Wi-Fi, régler le pare-feu, modifier les administrateurs locaux, lancer des scripts au démarrage du poste, etc.</br></br>
                    Vous comprenez bien que si vous avez le droit de modifier une GPO, vous serez capable de faire beaucoup de choses sur les objets sur lesquels elle s’applique. L’outil BloodHound vous permet de découvrir les utilisateurs ou groupes qui ont le droit de modifier une GPO. Si jamais vous en faites partie, alors le mieux est d’utiliser votre machine virtuelle Windows Server pour aller modifier la GPO.</br></br>
                    Il existe des outils qui permettent de modifier des GPO pour des attaquants, mais le mécanisme de fonctionnement des GPO est très, très complexe. Il y a des chances que vous cassiez les règles en place sur la GPO que vous exploitez, si vous passez par des outils.</br></br>
                    Je vous recommande fortement de plutôt passer par l’interface Windows de gestion des GPO pour toute modification (la GPMC, ou Group Policy Management Console). Idéalement, faites une sauvegarde de la GPO que vous exploitez avant de passer à l’action avec l’outil Backup-GPO de Microsoft, par exemple.</br></br>
                    Il existe donc beaucoup de moyens de compromettre les utilisateurs ou machines sur lesquels s’appliquent des GPO, mais un exemple simple est d’ajouter un administrateur local. Pour cela, il suffit d’éditer la GPO que vous avez le droit de modifier, d’aller dans Computer Configuration > Preferences > Control Panel Settings > Local Users and Groups, et de mettre à jour le groupe Administrators en y ajoutant un nouveau membre que vous contrôlez.
                </p>
                <img src="../../../images/eh-ad-27.png" class="img-fluid mx-auto d-block" style="max-width: 90%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Ajout d’un administrateur local sur les postes
                </p>
                <p style="margin-top: 30px;">
                    Sachez également qu’il arrive que des informations sensibles soient stockées dans les GPO, comme des mots de passe d’administrateurs locaux par exemple, ou que des paramètres dangereux soient positionnés. L’outil Group3r a été créé pour analyser le contenu de toutes les GPO afin d’extraire de potentielles informations intéressantes pour un attaquant.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad39'?></code></pre>
                <div id="IV4">
                    <p style="margin-top: 40px; margin-left: 20px; justify-content: start">
                        4 - Exploitez une PKI (Public Key Infrastructure)
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Une infrastructure de gestion de clés publiques permet de gérer l’ensemble des clés publiques des utilisateurs. Dans un Active Directory, cela permet notamment de délivrer des certificats aux utilisateurs pour différentes finalités. Ça peut être par exemple utilisé pour une authentification 802.1X, pour des accès VPN, pour chiffrer des flux, signer des scripts PowerShell ou encore pour renforcer des authentifications.</br></br>
                    Lorsqu’un utilisateur fait une demande de certificat à une autorité de certification, il demande en fait une signature de certificat en précisant le modèle de certificat qu’il souhaite, ainsi que les informations nécessaires pour remplir ce modèle. Active Directory dispose en effet de modèles préenregistrés qui permettent de ne pas réinventer la roue. Il est évidemment possible d’ajouter de nouveaux modèles pour tout type d’application. L’autorité de certification va alors vérifier si l’utilisateur a le droit de demander ce type de certificat, avec les informations fournies, et si tout va bien, il renverra au client le certificat signé.</br></br>
                    Le problème, c’est qu’il existe très souvent des erreurs de configuration dans ces modèles de certificats. Si un utilisateur a le droit de modifier un modèle, ou si le modèle est trop permissif et permet à un utilisateur de modifier plus d’informations que prévu, ça peut conduire à une vulnérabilité, voire une compromission du domaine.</br></br>
                    Par exemple, il arrive qu’un modèle de certificat destiné à l’authentification des utilisateurs autorise de spécifier le nom associé au certificat. Cela signifie que vous pouvez demander ce certificat en spécifiant qu’il sera signé par un administrateur. Utiliser ce certificat signé vous permettra alors de vous authentifier en tant qu’administrateur.</br></br>
                    Autre vulnérabilité, si vous avez le droit de modifier un modèle de certificat, vous pouvez le configurer comme expliqué précédemment, afin de pouvoir le demander avec un nom d’utilisateur arbitraire.</br></br>
                    L’outil Certify a été conçu pour énumérer les vulnérabilités potentielles dans la mise en place d’une PKI Active Directory. Il a été écrit en C#, et donc doit être exécuté depuis une session Windows authentifiée.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad40'?></code></pre>
                <p style="margin-top: 30px;">
                    Si vous souhaitez en savoir plus sur ce sujet, sachez qu’il existe un papier de 143 pages (en anglais) intitulé Certified Pre-Owned - Abusing Active Directory Certificate Services, qui se focalise sur ce type de vulnérabilité.
                </p>
                <div id="V">
                    <p style="margin-top: 70px; margin-left: 10px; justify-content: start">
                        <b>V - Maintenez un accès dans l’environnement compromis</b>
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Lorsque vous avez pris la main sur une machine, il peut être intéressant d’y ajouter une persistance pour pouvoir revenir dessus plus tard. En effet, si vous avez exploité une vulnérabilité propre à la machine, les équipes de sécurité peuvent potentiellement avoir détecté votre intrusion et mis à jour la machine dans la foulée. Il serait alors pertinent de garantir votre accès pour éviter de devoir tout refaire !
                </p>
                <div id="V1">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        1 - Créez un compte à privilèges
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Une technique simple et efficace consiste à ajouter un nouvel utilisateur local à la machine compromise. Après avoir créé cet utilisateur, vous l'ajouterez au groupe d’administration. De cette manière, vous pourrez vous connecter à cette machine via ce compte, en utilisant les outils légitimes, comme RDP ou WinRM.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad41'?></code></pre>
                <p style="margin-top: 30px;">
                    Notez que dans cet exemple, nous ajoutons le compte evil au groupe local Administrateurs. Cela fonctionne parce que la machine compromise est configurée en français. Si vous êtes sur une machine anglaise, vous devrez changer le nom du groupe local en Administrators. La reconnaissance que vous aurez faite au préalable sur cette machine vous permettra de découvrir la langue du système d’exploitation compromis.</br></br>
                    Cette technique permet de garder la main sur une machine compromise. Cependant, si vous avez compromis le domaine, vous pouvez aller plus loin, et ajouter un utilisateur à un groupe privilégié. Vous avez découvert ces groupes dans ce cours lors de la cartographie du domaine. Rappelez-vous, vous avez cherché les membres des groupes Admins du domaine ou Administrateurs de l’entreprise, par exemple. Ajouter un compte à l’un de ces groupes vous permettra donc de maintenir vos privilèges dans le domaine.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad42'?></code></pre>
                <p style="margin-top: 30px;">
                    Ces exemples sont simples à mettre en place, mais sachez que beaucoup d’entreprises surveillent les membres des groupes privilégiés de très près. Ce sont donc des techniques pratiques, mais bruyantes. Le risque de lever des alertes du côté de la défense est très élevé.
                </p>
                <div id="V2">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        2 - Adoptez les techniques de persistance classiques
                    </p>
                </div>
                <p style="margin-top: 30px;">
                    Il existe quelques techniques classiques de persistance qui permettent de reprendre la main sur une machine sans dépendre d’une vulnérabilité ou d’un compte compromis.</br></br>
                    Vous pouvez par exemple paramétrer la machine pour qu’elle exécute du code régulièrement, comme par exemple créer un compte administrateur local.
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    <b>Tâches planifiées</b>
                </p>
                <p style="margin-top: 20px; justify-content: start">
                    Pour exécuter du code régulièrement, vous pouvez créer une tâche planifiée.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad43'?></code></pre>
                <img src="../../../images/eh-ad-28.png" class="img-fluid mx-auto d-block" style="max-width: 100%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Tâche planifiée créée
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    <b>Clés RUN</b>
                </p>
                <p style="margin-top: 20px;">
                    Une autre manière d’exécuter régulièrement du code consiste à utiliser certaines clés de registre permettant d’exécuter un programme dès qu’un utilisateur se connecte. Ces clés sont couramment appelées les clés RUN. Elles se trouvent à ces différents emplacements dans le registre :
                </p>
                <ul style="margin-top: 20px; font-size: large; text-align: justify; color: white;">
                    <li>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</li>
                    <li>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</li>
                    <li>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</li>
                    <li>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce</li>
                </ul>
                <p style="margin-top: 30px;">
                    Le contenu des clés Run sera exécuté à chaque fois qu’un utilisateur se connectera, tandis que celui des clés RunOnce sera exécuté une seule fois, puis le contenu de la clé sera automatiquement supprimé.</br></br>
                    Vous pouvez créer ces clés via la ligne de commande avec l’utilitaire reg propre à Windows.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad44'?></code></pre>
                <p style="margin-top: 30px; justify-content: start">
                    <b>Modification de services</b>
                </p>
                <p style="margin-top: 20px;">
                    Les services sont également une fonctionnalité que vous pouvez utiliser pour de la persistance. Ce sont des programmes qui peuvent être exécutés automatiquement au démarrage de la machine, et qui tournent en tâche de fond. Vous pouvez alors créer un service, ou mieux, en modifier un existant, pour que votre code malveillant soit exécuté automatiquement au démarrage de la machine.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad45'?></code></pre>
                <p style="margin-top: 30px;">
                    Un œil avisé aura remarqué qu’il y a un espace après chaque signe = dans la ligne de commande. Ce n’est pas une faute de frappe, l’utilitaire sc attend bien un espace après binPath= et start=.
                </p>
                <div id="V3">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        3 - Modifiez les droits des objets sensibles
                    </p>
                </div>
                <p style="margin-top: 20px;">
                    Vous avez pu observer que la gestion des droits chez Windows devenait assez vite complexe. Il y a des centaines d’objets, des milliers de droits, et peu de personnes sont capables d’avoir un œil sur tout, tout le temps.</br></br>
                    Modifier des droits est donc une technique qui peut être assez discrète pour des fins de persistance. Il y a tellement de droits et d’objets qu’il serait impossible de décrire toutes les techniques ici, mais en voici une idée.</br></br>
                    Le groupe Admins du domaine est un groupe à privilèges. Vous avez vu que vous pouviez ajouter un compte dans ce groupe pour de la persistance. Mais que se passe-t-il si un jour ce groupe est nettoyé par les administrateurs, pour ne garder que les comptes qu’ils connaissent ?</br></br>
                    Eh bien, une autre possibilité consiste à  modifier la liste des droits appliquée au groupe en question. Au lieu d’ajouter votre utilisateur au groupe, vous pouvez plutôt donner le droit à votre utilisateur d’ajouter des membres arbitraires au groupe. Comme ça, plus tard, vous pourrez soit vous ajouter vous-même, soit ajouter un autre compte que vous avez en votre possession.</br></br>
                    Pour cela, vous devez vous rendre dans l’onglet Sécurité (ou Security) du groupe, et vous ajoutez le droit Écriture (ou Write) à l’utilisateur de votre choix.
                </p>
                <img src="../../../images/eh-ad-29.png" class="img-fluid mx-auto d-block" style="max-width: 80%; margin-top: 30px;"/>
                <p style="margin-top: 20px; font-size: small;">
                    Ajout d’une persistance pour l’utilisateur “Open Classrooms”
                </p>
                <div id="V4">
                    <p style="margin-top: 30px; margin-left: 20px; justify-content: start">
                        4 - Forgez des tickets Kerberos
                    </p>
                </div>
                <p style="margin-top: 20px;">
                    Enfin, deux techniques de persistance ont beaucoup fait parler d’elles. Ce sont les techniques du Silver Ticket et du Golden Ticket.</br></br>
                    Alors pour rappel, il utilise des tickets (TGT et tickets de service) pour authentifier des utilisateurs voulant accéder à des services. Dans ces tickets, il y a toutes les informations de l’utilisateur. On y trouve son nom, par exemple, mais aussi l’appartenance à ses groupes. Il est donc important qu’un utilisateur ne puisse pas modifier arbitrairement ses tickets, sinon il pourrait prétendre faire partie du groupe “Admins du domaine” ou être le compte “Administrateur”. Les tickets sont donc protégés. Mais que se passe-t-il si les mots de passe qui protègent ces tickets sont volés ? C’est ce que nous allons voir.
                </p>
                <p style="margin-top: 30px; justify-content: start">
                    <b>Silver Ticket</b>
                </p>
                <p style="margin-top: 20px;">
                    La technique du Silver Ticket se focalise sur les tickets de service. Lorsque vous vous connectez, vous faites une première demande de TGT, c’est votre carte d’identité. Puis à chaque fois que vous voulez accéder à un service, vous allez présenter votre TGT au contrôleur de domaine, et celui-ci copiera vos informations dans un ticket de service. Pour éviter que vous puissiez le modifier, ce ticket est protégé avec le mot de passe du compte de service.</br></br>
                    Mais alors, si vous avez compromis le domaine et que vous souhaitez maintenir un accès, vous pouvez tout à fait voler les mots de passe des comptes de service, notamment les mots de passe des comptes machine. Vous pouvez les voler en utilisant secretsdump.py sur un contrôleur de domaine. Vous avez vu en début de partie que cet outil allait effectuer une attaque DCSync pour voler tous les hashs des mots de passe de tous les comptes du domaine. Une fois ces mots de passe volés, vous pouvez ensuite forger des tickets de service de toutes pièces.</br></br>
                    Ces tickets forgés sont des Silver Tickets. Vous indiquez dans ce ticket que vous appartenez à tous les groupes privilégiés, et vous le protégez ensuite avec le mot de passe du compte de service que vous avez dérobé. En présentant ces tickets aux services, ce sera open bar !</br></br>
                    Pour créer un Silver Ticket, vous pouvez utiliser ticketer.py de Impacket. Mais il vous faudra l’identifiant du domaine. C’est une information nécessaire à l’outil pour forger le ticket. Vous pouvez le récupérer avec lookupsid.py.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad46'?></code></pre>
                <p style="margin-top: 30px; justify-content: start">
                    <b>Golden Ticket</b>
                </p>
                <p style="margin-top: 20px;">
                    Les Silver Tickets sont pratiques, mais c’est fastidieux de devoir créer un ticket par service. En plus, les mots de passe des comptes de service risquent fortement de changer régulièrement, ce qui vous ferait perdre vos accès.</br></br>
                    Pourquoi ne pas aller en amont, et forger un TGT ? C’est le principe du Golden Ticket. Au lieu de voler les secrets des comptes de service, vous allez tout simplement voler le secret absolu, celui qui permet de protéger les TGT. Ce secret, c’est le mot de passe du compte krbtgt. Ce compte est présent dans tous les environnements Active Directory, et est uniquement là pour que le contrôleur de domaine puisse signer et chiffrer les TGT avec son mot de passe. C’est tout. Et son mot de passe n’est pas changé automatiquement. Toutes les conditions rêvées pour maintenir un accès.</br></br>
                    D’expérience, il arrive très souvent que la date de dernier changement de mot de passe du compte krbtgt corresponde à la date d’installation de l’Active Directory dans l’entreprise. Ça veut dire que si ce compte a été compromis une fois depuis, alors les Golden Tickets sont toujours valables aujourd’hui.</br></br>
                    Les mêmes outils permettent de créer un Golden Ticket, sauf que cette fois-ci, c’est le secret du compte krbtgt qui doit être fourni, et il n’est pas nécessaire de fournir un nom de service.
                </p>
                <pre><code class="language-markup"><?php require_once'../../../script/ad47'?></code></pre>
                <script src="../../../static/js/prism.js" type="text/javascript"></script>
            </div>
        </div>
      
        <div class="row justify-content-center">
            <div class="group col-sm-8">
  
                <h3 style="margin-top: 130px;">
                    Références
                </h3>

                <h6 style="margin-top: 30px;">
                    <a href="https://openclassrooms.com/fr/courses/7723396-assurez-la-securite-de-votre-active-directory-et-de-vos-domaines-windows" target="_blank">OpenClassrooms - Assurez la sécurité de votre Active Directory et de vos domaines Windows</a>
                </h6>

                <h6 style="margin-top: 30px;">
                    <a href="https://fr.wikipedia.org/wiki/Kill_chain_(s%C3%A9curit%C3%A9_informatique)" target="_blank">Wikipedia - Kill chain</a>
                </h6>

                <h6 style="margin-top: 30px;">
                    <a href="https://nmap.org/" target="_blank">Nmap</a>
                </h6>

                <h6 style="margin-top: 30px; margin-bottom: 140px;">
                    <a href="https://github.com/charlesroelli/nbtscan" target="_blank">NBTscan</a>
                </h6>
                
            </div>
        </div>

        <?php // Creation du Treeview en JS ?>
        <script src="../../../static/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
        <script src="../../../static/js/tree.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                window.nav = new NavTree("#nav-tree", {
                searchable: false,
                showEmptyGroups: true,

                groupOpenIconClass: "fas",
                groupOpenIcon: "fa-chevron-down",

                groupCloseIconClass: "fas",
                groupCloseIcon: "fa-chevron-right",

                linkIconClass: "fas",
                linkIcon: "fa-link",

                iconWidth: "25px",

                searchPlaceholderText: "Search",
                });
            });
        </script>

    </body>

    <?php //Inclusion du pied de page ?>
    <?php require_once('../../../footer.php'); ?>
</html>